# Note : les 2 instructions ci-dessous ne créent pas de limite,
# elles permettent de définir la taille du stockage des informations provenant des utilisateurs
# afin que la taille du stockage des informations ne soit pas elle-même la cause de la saturation

# Crée une zone de mémoire de 10 Mo pour stocker
# le nombre de connexions ouvertes par chaque adresse IP des clients.
# (environ 160 000 adresses IP).
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Crée une zone de mémoire de 10 Mo pour stocker le nombre de requêtes de chaque adresse IP des clients.
# 'rate=10r/s' signifie que Nginx limitera chaque adresse IP à 10 requêtes par seconde.
# (environ 160 000 adresses IP).
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

server {

   # Désactive l'envoi de la version de Nginx dans les en-têtes de réponse pour des raisons de sécurité.
   server_tokens off;

   # Écoute les requêtes HTTP sur le port 80.
   listen 80;

   # Accepte les requêtes pour tous les noms de domaine (server_name _).
   server_name _;

   location /time {

        # Limite chaque adresse IP à 10 connexions simultanées.
        limit_conn conn_limit_per_ip 10;

        # Limite chaque adresse IP à 10 requêtes par seconde avec un burst de 20 requêtes.
        # 'nodelay' signifie que les requêtes excédentaires seront traitées immédiatement si elles sont dans la limite du burst.
        limit_req zone=req_limit_per_ip burst=20 nodelay;

        # Transfère les requêtes vers le serveur backend 'app' sur le port 3000.
        proxy_pass http://app:3000;
   }

   location /cdn/ {
           # Transfère les requêtes vers le serveur backend 'static'.
           proxy_pass http://static/;
   }

}
